"""Initial migration

Revision ID: ed96223492c4
Revises: 
Create Date: 2025-01-14 10:57:27.926455

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'ed96223492c4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('teams',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=30), nullable=False),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('stadium', sqlmodel.sql.sqltypes.AutoString(length=30), nullable=False),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('coach', sqlmodel.sql.sqltypes.AutoString(length=30), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('teams', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_teams_city'), ['city'], unique=False)
        batch_op.create_index(batch_op.f('ix_teams_country'), ['country'], unique=False)
        batch_op.create_index(batch_op.f('ix_teams_name'), ['name'], unique=False)

    op.create_table('players',
    sa.Column('firstname', sqlmodel.sql.sqltypes.AutoString(length=30), nullable=False),
    sa.Column('lastname', sqlmodel.sql.sqltypes.AutoString(length=30), nullable=False),
    sa.Column('birthdate', sa.Date(), nullable=False),
    sa.Column('height', sa.Float(), nullable=False),
    sa.Column('nationality', sqlmodel.sql.sqltypes.AutoString(length=30), nullable=False),
    sa.Column('position', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('dorsal', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('players', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_players_firstname'), ['firstname'], unique=False)
        batch_op.create_index(batch_op.f('ix_players_lastname'), ['lastname'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('players', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_players_lastname'))
        batch_op.drop_index(batch_op.f('ix_players_firstname'))

    op.drop_table('players')
    with op.batch_alter_table('teams', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_teams_name'))
        batch_op.drop_index(batch_op.f('ix_teams_country'))
        batch_op.drop_index(batch_op.f('ix_teams_city'))

    op.drop_table('teams')
    # ### end Alembic commands ###
